/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cedartalkclient;

import edu.cedarville.jvolante.cedartalknetworking.Message;
import java.awt.event.KeyEvent;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;

/**
 *
 * @author kfilbrun
 */
public class ChatWindow extends javax.swing.JFrame {

    /**
     * Creates new form ChatWindow
     */
    public ChatWindow(String friend, String me, ClientDispatcher d) {
        initComponents();
        friendName = friend;
        myName = me; 
        this.setTitle(friend);
        dispatcher = d;
    }
    
    ClientDispatcher dispatcher;

    private String friendName;
    private String myName;
    private boolean firstMessage = true;
    private boolean friendOnline = true;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPaneMessages = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaTypedMessage = new javax.swing.JTextArea();
        jButtonSendMessage = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextPaneMessages.setEditable(false);
        jScrollPane1.setViewportView(jTextPaneMessages);

        jTextAreaTypedMessage.setColumns(20);
        jTextAreaTypedMessage.setRows(5);
        jTextAreaTypedMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaTypedMessageKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTextAreaTypedMessage);

        jButtonSendMessage.setText("Send Message");
        jButtonSendMessage.setToolTipText("");
        jButtonSendMessage.setActionCommand("");
        jButtonSendMessage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSendMessageMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(123, Short.MAX_VALUE)
                .addComponent(jButtonSendMessage)
                .addGap(123, 123, 123))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSendMessage)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSendMessageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSendMessageMouseClicked
        sendMessage();
    }//GEN-LAST:event_jButtonSendMessageMouseClicked

    private void jTextAreaTypedMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaTypedMessageKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            evt.consume();
            sendMessage();
        }
    }//GEN-LAST:event_jTextAreaTypedMessageKeyPressed

    protected void friendOffline(){
        friendOnline = false;
        appendMessage("Connection Ended", friendName + " went offline.");
        jTextAreaTypedMessage.setEditable(false);
        jButtonSendMessage.setEnabled(false);
    }
    
    protected void messageRecieved(String msg){
        appendMessage(friendName, msg);
    }
    
    private void sendMessage(){
        if(friendOnline){
            String typedMsg = jTextAreaTypedMessage.getText();
            Message message = new Message(3, myName + " " + friendName + " " + typedMsg);
            dispatcher.sendMessage(message);
            jTextAreaTypedMessage.setText(""); //Clear it out on send
            appendMessage(myName, typedMsg);
        }
    }
    
    private void appendMessage(String name, String msg){
        Document doc = jTextPaneMessages.getDocument();
        String finalMsg;
        if(firstMessage){
            finalMsg = name + ": " + msg;
            firstMessage = false;
        }
        else {
            finalMsg = "\n\n" + name + ": " + msg;
        }
        try {
            doc.insertString(doc.getLength(), finalMsg, null);
        }
        catch(BadLocationException ex){
            ex.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatWindow("Bob", "Jim", null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSendMessage;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaTypedMessage;
    private javax.swing.JTextPane jTextPaneMessages;
    // End of variables declaration//GEN-END:variables
}
